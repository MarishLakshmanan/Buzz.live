{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sakth\\\\Documents\\\\BackUp\\\\Buzz.live\\\\frontend\\\\buzz.live\\\\src\\\\components\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport profileIcon from \"../resources/user.png\";\nimport \"../styles/profile.css\";\nimport { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Profile(props) {\n  _s();\n\n  const [edit, setEdit] = useState(false);\n  const [src, setSrc] = useState(\"\");\n  if (!props.open) return null;\n  const username = localStorage.getItem(\"uname\");\n  const userImg = localStorage.getItem(\"img\");\n  const useremail = localStorage.getItem(\"email\");\n\n  function showImage() {\n    let file = document.getElementById(\"s-Img\").files[0];\n\n    if (file) {\n      var reader = new FileReader();\n\n      reader.onload = function (e) {\n        setSrc(reader.result);\n      };\n\n      reader.readAsDataURL(file);\n    }\n  }\n\n  function editUser(e) {\n    if (!edit) {\n      e.preventDefault();\n      const btn = document.getElementById(\"p-edit-btn\");\n      document.getElementById(\"p-pass-btn\").classList.add(\"active\");\n      document.querySelectorAll(\".profile-container input\").forEach(element => {\n        element.removeAttribute('readonly');\n        element.classList.add(\"active\");\n      });\n      btn.innerHTML = \"Update\";\n      setEdit(true);\n    } else {\n      e.preventDefault();\n      setEdit(false);\n      props.onClose();\n    }\n  }\n\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: userImg ? userImg : profileIcon,\n          alt: \"userimage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: showImage,\n          type: \"file\",\n          name: \"userImage\",\n          id: \"s-Img\",\n          accept: \"image/*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        onClick: () => {\n          setEdit(false);\n          props.onClose();\n        },\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        spellCheck: \"false\",\n        autoComplete: \"off\",\n        type: \"text\",\n        name: \"userName\",\n        defaultValue: username,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"userEmail\",\n        defaultValue: useremail,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"p-pass-btn\",\n        children: \"Change password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"p-edit-btn\",\n        onClick: editUser,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this), document.getElementById(\"portal\"));\n}\n\n_s(Profile, \"Lq5nhXAP6OpqE0dB4hpr3LTwyyw=\");\n\n_c = Profile;\n\nfunction getUser() {\n  const uID = localStorage.getItem(\"id\");\n  axios.post(\"http://localhost:5000/getUser\", {\n    uID: uID\n  }).then(res => {});\n}\n\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/sakth/Documents/BackUp/Buzz.live/frontend/buzz.live/src/components/Profile.js"],"names":["axios","profileIcon","useState","ReactDOM","Profile","props","edit","setEdit","src","setSrc","open","username","localStorage","getItem","userImg","useremail","showImage","file","document","getElementById","files","reader","FileReader","onload","e","result","readAsDataURL","editUser","preventDefault","btn","classList","add","querySelectorAll","forEach","element","removeAttribute","innerHTML","onClose","createPortal","getUser","uID","post","then","res"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport profileIcon from \"../resources/user.png\"\r\nimport \"../styles/profile.css\"\r\nimport {useState} from \"react\";\r\nimport ReactDOM from \"react-dom\"\r\n\r\n\r\n\r\nfunction Profile(props){\r\n    const [edit,setEdit] = useState(false);\r\n    const [src,setSrc] = useState(\"\");\r\n\r\n    if(!props.open) return null;\r\n\r\n    const username = localStorage.getItem(\"uname\");\r\n    const userImg = localStorage.getItem(\"img\");\r\n    const useremail = localStorage.getItem(\"email\");\r\n    \r\n\r\n\r\n    function showImage(){\r\n        let file = document.getElementById(\"s-Img\").files[0];\r\n        if(file){\r\n            var reader = new FileReader();\r\n            reader.onload = function(e) {\r\n                setSrc(reader.result);\r\n            }\r\n\r\n            reader.readAsDataURL(file);\r\n        }\r\n           \r\n    }\r\n\r\n    function editUser(e){\r\n        if(!edit){\r\n            e.preventDefault();\r\n            const btn = document.getElementById(\"p-edit-btn\");\r\n            document.getElementById(\"p-pass-btn\").classList.add(\"active\")\r\n            document.querySelectorAll(\".profile-container input\").forEach((element)=>{\r\n                element.removeAttribute('readonly');\r\n                element.classList.add(\"active\");\r\n            })\r\n            btn.innerHTML = \"Update\";\r\n            setEdit(true);\r\n        }else{\r\n            e.preventDefault();\r\n            setEdit(false);\r\n            props.onClose();\r\n        }\r\n        \r\n    }\r\n    return ReactDOM.createPortal(\r\n        <div className=\"profile-container\">\r\n            <form>\r\n                <div>\r\n                    <img src={(userImg)?userImg:profileIcon} alt=\"userimage\" />\r\n                    <input onChange={showImage} type=\"file\" name=\"userImage\" id=\"s-Img\" accept=\"image/*\"></input>\r\n                </div>\r\n                <h3 onClick={()=>{setEdit(false);props.onClose()}}>X</h3>\r\n                <input spellCheck=\"false\" autoComplete=\"off\" type=\"text\" name=\"userName\" defaultValue={username} readOnly />\r\n                <input type=\"email\" name=\"userEmail\" defaultValue={useremail} readOnly/>\r\n                <button id=\"p-pass-btn\">Change password</button>\r\n                <button id=\"p-edit-btn\" onClick={editUser}>Edit</button>\r\n            </form>\r\n        </div>,document.getElementById(\"portal\")\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nfunction getUser(){\r\n    const uID = localStorage.getItem(\"id\");\r\n    axios.post(\"http://localhost:5000/getUser\",{uID:uID}).then((res)=>{\r\n        \r\n    })\r\n}\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}