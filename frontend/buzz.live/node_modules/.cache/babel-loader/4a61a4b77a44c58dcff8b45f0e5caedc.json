{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sakth\\\\Documents\\\\Buzz.live\\\\frontend\\\\buzz.live\\\\src\\\\components\\\\YoutubePlayer.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport ReactPlayer from \"react-player\";\nimport YouResult from \"./YouResult\";\nimport { playVideoToOthers, videoStateChanged } from \"../functions/roomConnection\";\nimport { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction YoutubePlayer() {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  const [url, setUrl] = useState(\"\");\n  const [clientUrl, setClientUrl] = useState(\"\");\n  const [state, setState] = useState(true);\n  const [clientState, setClinetState] = useState(true);\n  const playerRef = useRef();\n  const clientPlayerRef = useRef();\n\n  function searchVideo(e) {\n    e.preventDefault();\n    const query = document.getElementById(\"you-video\").value;\n    const url = `https://www.googleapis.com/youtube/v3/search?key=AIzaSyDg5qXORRGImzmPysBcIWI5f09avJ8U-3E&part=snippet&q=${query}&maxResults=${10}&type=video`;\n    axios.get(url).then(res => {\n      setVideos(res.data.items);\n    });\n  }\n\n  function playVideo(id) {\n    setVideos([]);\n    setUrl(`https://www.youtube.com/watch?v=${id}`);\n    playVideoToOthers(id);\n  }\n\n  function videoState() {\n    setState(true);\n    videoStateChanged(true, playerRef.current.getCurrentTime());\n  }\n\n  function videoPaused() {\n    setState(false);\n    videoStateChanged(false, playerRef.current.getCurrentTime());\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search video\",\n        id: \"you-video\",\n        name: \"youtube-video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchVideo,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"searchResults\",\n      children: videos.map(data => {\n        const url = `https://img.youtube.com/vi/${data.id.videoId}/0.jpg`;\n        return /*#__PURE__*/_jsxDEV(YouResult, {\n          img: url,\n          cb: playVideo,\n          videoId: data.id.videoId\n        }, data.id.videoId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n        ref: playerRef,\n        url: url,\n        onPlay: videoState,\n        playing: state,\n        onPause: videoPaused,\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        ref: clientPlayerRef,\n        url: clientUrl,\n        playing: clientState,\n        onClick: () => setClinetState(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(YoutubePlayer, \"hwYfIabsmyglppSlioZRsMqNLH0=\");\n\n_c = YoutubePlayer;\nexport default YoutubePlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"YoutubePlayer\");","map":{"version":3,"sources":["C:/Users/sakth/Documents/Buzz.live/frontend/buzz.live/src/components/YoutubePlayer.js"],"names":["axios","ReactPlayer","YouResult","playVideoToOthers","videoStateChanged","useState","useRef","YoutubePlayer","videos","setVideos","url","setUrl","clientUrl","setClientUrl","state","setState","clientState","setClinetState","playerRef","clientPlayerRef","searchVideo","e","preventDefault","query","document","getElementById","value","get","then","res","data","items","playVideo","id","videoState","current","getCurrentTime","videoPaused","map","videoId"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport ReactPlayer from \"react-player\";\r\nimport YouResult from \"./YouResult\";\r\nimport {playVideoToOthers,videoStateChanged} from \"../functions/roomConnection\";\r\nimport {useState,useRef} from \"react\"\r\n\r\nfunction YoutubePlayer(){\r\n\r\n    const[videos,setVideos] = useState([]);\r\n    const[url,setUrl] = useState(\"\");\r\n    const[clientUrl,setClientUrl] = useState(\"\");\r\n    const[state,setState] = useState(true);\r\n    const[clientState,setClinetState] = useState(true);\r\n    const playerRef = useRef();\r\n    const clientPlayerRef  = useRef();\r\n\r\n    function searchVideo(e){\r\n        e.preventDefault();\r\n        const query =  document.getElementById(\"you-video\").value;\r\n        const url  = `https://www.googleapis.com/youtube/v3/search?key=AIzaSyDg5qXORRGImzmPysBcIWI5f09avJ8U-3E&part=snippet&q=${query}&maxResults=${10}&type=video`\r\n        axios.get(url).then((res)=>{\r\n            setVideos(res.data.items);\r\n        })\r\n    }\r\n\r\n    function playVideo(id){\r\n        setVideos([]);\r\n        setUrl(`https://www.youtube.com/watch?v=${id}`)\r\n        playVideoToOthers(id)\r\n    }\r\n\r\n    function videoState(){\r\n        setState(true);\r\n        videoStateChanged(true,playerRef.current.getCurrentTime());\r\n    }\r\n\r\n    function videoPaused(){\r\n        setState(false);\r\n        videoStateChanged(false,playerRef.current.getCurrentTime());\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form>\r\n            <input type=\"text\" placeholder=\"Search video\" id=\"you-video\" name=\"youtube-video\" />\r\n            <button onClick={searchVideo}>Search</button>\r\n            </form>\r\n            <div id=\"searchResults\">\r\n                {videos.map((data)=>{\r\n                    const url = `https://img.youtube.com/vi/${data.id.videoId}/0.jpg`\r\n                    return (<YouResult key={data.id.videoId} img={url} cb={playVideo} videoId={data.id.videoId} />)\r\n                })}\r\n            </div>\r\n            <div>\r\n                <ReactPlayer ref={playerRef} url={url} onPlay={videoState} playing={state} onPause={videoPaused} controls={true} />\r\n                <ReactPlayer ref={clientPlayerRef} url={clientUrl} playing={clientState} onClick={()=>(setClinetState(true))}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default YoutubePlayer;"]},"metadata":{},"sourceType":"module"}