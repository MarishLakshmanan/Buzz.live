{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sakth\\\\Documents\\\\BackUp\\\\Buzz.live\\\\frontend\\\\buzz.live\\\\src\\\\components\\\\YoutubeSearch.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport YouResult from \"./YouResult\";\nimport { playVideoToOthers, videoStateChanged } from \"../functions/roomConnection\";\nimport { useState, useRef } from \"react\";\nimport \"../styles/youtubePlayer.css\";\nimport ReactPlayer from \"react-player\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction YoutubeSearch(props) {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  const [url, setUrl] = useState(\"\");\n  const playerRef = useRef();\n  const [state, setState] = useState(true);\n\n  function searchVideo(e) {\n    e.preventDefault();\n    const query = document.getElementById(\"you-video\").value;\n    const url = `https://www.googleapis.com/youtube/v3/search?key=AIzaSyDg5qXORRGImzmPysBcIWI5f09avJ8U-3E&part=snippet&q=${query}&maxResults=${10}&type=video`;\n    axios.get(url).then(res => {\n      setVideos(res.data.items);\n    });\n  }\n\n  function playVideo(id) {\n    setVideos([]);\n    setUrl(`https://www.youtube.com/watch?v=${id}`);\n    props.playVideo(url);\n    playVideoToOthers(id, props.setClientUrl);\n  }\n\n  function videoState() {\n    setState(true);\n    videoStateChanged(true, playerRef.current.getCurrentTime());\n  }\n\n  function videoPaused() {\n    setState(false);\n    videoStateChanged(false, playerRef.current.getCurrentTime());\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"youtube-search\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search video\",\n        id: \"you-video\",\n        name: \"youtube-video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchVideo,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"searchResults\",\n      children: videos.map(data => {\n        const url = `https://img.youtube.com/vi/${data.id.videoId}/0.jpg`;\n        return /*#__PURE__*/_jsxDEV(YouResult, {\n          img: url,\n          cb: playVideo.bind(this, id),\n          videoId: data.id.videoId\n        }, data.id.videoId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(YoutubeSearch, \"W19RKWbdskVQXRWXqCN/tSk0Opk=\");\n\n_c = YoutubeSearch;\nexport default YoutubeSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"YoutubeSearch\");","map":{"version":3,"sources":["C:/Users/sakth/Documents/BackUp/Buzz.live/frontend/buzz.live/src/components/YoutubeSearch.js"],"names":["axios","YouResult","playVideoToOthers","videoStateChanged","useState","useRef","ReactPlayer","YoutubeSearch","props","videos","setVideos","url","setUrl","playerRef","state","setState","searchVideo","e","preventDefault","query","document","getElementById","value","get","then","res","data","items","playVideo","id","setClientUrl","videoState","current","getCurrentTime","videoPaused","map","videoId","bind"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport YouResult from \"./YouResult\";\r\nimport {playVideoToOthers,videoStateChanged} from \"../functions/roomConnection\";\r\nimport {useState,useRef} from \"react\"\r\nimport \"../styles/youtubePlayer.css\"\r\nimport ReactPlayer from \"react-player\";\r\n\r\nfunction YoutubeSearch(props){\r\n\r\n    const[videos,setVideos] = useState([]);\r\n    const[url,setUrl] = useState(\"\");\r\n    const playerRef = useRef();\r\n    const[state,setState] = useState(true);\r\n\r\n    function searchVideo(e){\r\n        e.preventDefault();\r\n        const query =  document.getElementById(\"you-video\").value;\r\n        const url  = `https://www.googleapis.com/youtube/v3/search?key=AIzaSyDg5qXORRGImzmPysBcIWI5f09avJ8U-3E&part=snippet&q=${query}&maxResults=${10}&type=video`\r\n        axios.get(url).then((res)=>{\r\n            setVideos(res.data.items);\r\n        })\r\n    }\r\n\r\n    function playVideo(id){\r\n        setVideos([]);\r\n        setUrl(`https://www.youtube.com/watch?v=${id}`)\r\n        props.playVideo(url)\r\n        playVideoToOthers(id,props.setClientUrl)\r\n        \r\n    }\r\n\r\n    function videoState(){\r\n        setState(true);\r\n        videoStateChanged(true,playerRef.current.getCurrentTime());\r\n    }\r\n\r\n    function videoPaused(){\r\n        setState(false);\r\n        videoStateChanged(false,playerRef.current.getCurrentTime());\r\n    }\r\n\r\n    return(\r\n        <div id=\"youtube-search\">\r\n            <form>\r\n                <input type=\"text\" placeholder=\"Search video\" id=\"you-video\" name=\"youtube-video\" />\r\n                <button onClick={searchVideo}>Search</button>\r\n            </form>\r\n            <div id=\"searchResults\">\r\n                {videos.map((data)=>{\r\n                    const url = `https://img.youtube.com/vi/${data.id.videoId}/0.jpg`\r\n                    return (<YouResult key={data.id.videoId} img={url} cb={playVideo.bind(this,id)} videoId={data.id.videoId} />)\r\n                })}\r\n            </div>\r\n            {/* <div>\r\n            <ReactPlayer ref={playerRef} url={url} onPlay={videoState} playing={state} onPause={videoPaused} controls={true} />\r\n                    <ReactPlayer ref={props.clientPlayerRef} url={props.clientUrl} playing={props.clientState} onClick={()=>(props.setClinetState(true))}/>\r\n            </div> */}\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default YoutubeSearch;"]},"metadata":{},"sourceType":"module"}