{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sakth\\\\Documents\\\\BackUp\\\\Buzz.live\\\\frontend\\\\buzz.live\\\\src\\\\components\\\\YoutubePlayer.js\",\n    _s = $RefreshSig$();\n\nimport ReactPlayer from \"react-player\";\nimport \"../styles/youtubePlayer.css\";\nimport { useRef, useState } from \"react\";\nimport { videoStateChanged } from \"../functions/roomConnection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction YoutubePlayer(props) {\n  _s();\n\n  const [hostState, setHost] = useState(true);\n  const [clientState, setClient] = useState(true);\n  const hostRef = useRef();\n  const clientRef = useRef();\n\n  function videoPaused() {\n    setHost(false);\n    const seconds = hostRef.current.getCurrentTime();\n    videoStateChanged(hostState, seconds);\n  }\n\n  if (!props.client) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"react-player\",\n      children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        ref: hostRef,\n        width: \"100%\",\n        height: \"100%\",\n        url: props.url,\n        controls: true,\n        playing: hostState,\n        onPause: videoPaused\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"react-player\",\n      children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        width: \"100%\",\n        height: \"100%\",\n        url: props.url,\n        playing: clientState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(YoutubePlayer, \"6Lcp0OufGsYhQp2m9grj9i8DfyQ=\");\n\n_c = YoutubePlayer;\nexport default YoutubePlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"YoutubePlayer\");","map":{"version":3,"sources":["C:/Users/sakth/Documents/BackUp/Buzz.live/frontend/buzz.live/src/components/YoutubePlayer.js"],"names":["ReactPlayer","useRef","useState","videoStateChanged","YoutubePlayer","props","hostState","setHost","clientState","setClient","hostRef","clientRef","videoPaused","seconds","current","getCurrentTime","client","url"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,OAAO,6BAAP;AACA,SAAQC,MAAR,EAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,iBAAR,QAAgC,6BAAhC;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AAAA;;AAEzB,QAAM,CAACC,SAAD,EAAWC,OAAX,IAAsBL,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACM,WAAD,EAAaC,SAAb,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAMQ,OAAO,GAAGT,MAAM,EAAtB;AACA,QAAMU,SAAS,GAAGV,MAAM,EAAxB;;AAEA,WAASW,WAAT,GAAsB;AAClBL,IAAAA,OAAO,CAAC,KAAD,CAAP;AACA,UAAMM,OAAO,GAAEH,OAAO,CAACI,OAAR,CAAgBC,cAAhB,EAAf;AACAZ,IAAAA,iBAAiB,CAACG,SAAD,EAAWO,OAAX,CAAjB;AACH;;AAED,MAAG,CAACR,KAAK,CAACW,MAAV,EAAiB;AACb,wBAEI;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA,6BACI,QAAC,WAAD;AAAa,QAAA,GAAG,EAAEN,OAAlB;AAA2B,QAAA,KAAK,EAAC,MAAjC;AAAwC,QAAA,MAAM,EAAC,MAA/C;AAAsD,QAAA,GAAG,EAAEL,KAAK,CAACY,GAAjE;AAAsE,QAAA,QAAQ,EAAE,IAAhF;AAAsF,QAAA,OAAO,EAAEX,SAA/F;AAA0G,QAAA,OAAO,EAAEM;AAAnH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAOH,GARD,MAQK;AACD,wBAEI;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA,6BACI,QAAC,WAAD;AAAa,QAAA,KAAK,EAAC,MAAnB;AAA0B,QAAA,MAAM,EAAC,MAAjC;AAAwC,QAAA,GAAG,EAAEP,KAAK,CAACY,GAAnD;AAAwD,QAAA,OAAO,EAAET;AAAjE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAOH;AACJ;;GA9BQJ,a;;KAAAA,a;AAgCT,eAAeA,aAAf","sourcesContent":["import ReactPlayer from \"react-player\";\r\nimport \"../styles/youtubePlayer.css\"\r\nimport {useRef,useState} from \"react\"\r\nimport {videoStateChanged} from \"../functions/roomConnection\"\r\n\r\nfunction YoutubePlayer(props){\r\n\r\n    const [hostState,setHost] = useState(true);\r\n    const [clientState,setClient] = useState(true);\r\n    const hostRef = useRef();\r\n    const clientRef = useRef();\r\n\r\n    function videoPaused(){\r\n        setHost(false);\r\n        const seconds =hostRef.current.getCurrentTime();\r\n        videoStateChanged(hostState,seconds)\r\n    }\r\n\r\n    if(!props.client){\r\n        return (\r\n\r\n            <div id=\"react-player\">\r\n                <ReactPlayer ref={hostRef} width=\"100%\" height=\"100%\" url={props.url} controls={true} playing={hostState} onPause={videoPaused} />\r\n            </div>\r\n            \r\n        )\r\n    }else{\r\n        return (\r\n\r\n            <div id=\"react-player\">\r\n                <ReactPlayer width=\"100%\" height=\"100%\" url={props.url} playing={clientState} />\r\n            </div>\r\n            \r\n        )   \r\n    }\r\n}\r\n\r\nexport default YoutubePlayer;"]},"metadata":{},"sourceType":"module"}