{"ast":null,"code":"import { io } from \"socket.io-client\";\nimport Peer from \"peerjs\";\nconst activePeers = {};\nvar socket;\n\nfunction initSocketConnection(roomID, setClientUrl, setClinetState, clientPlayerRef, createMessage) {\n  const peer = new Peer(undefined, {\n    host: '/',\n    port: '3001'\n  });\n  socket = io(\"http://localhost:5000\");\n  peer.on(\"open\", id => {\n    socket.emit(\"join-room\", roomID, id);\n  });\n  socket.on(\"user-leaved\", userID => {\n    if (activePeers[userID]) {\n      activePeers[userID].close();\n      console.log(\"user removed\");\n    } else {\n      console.log(\"user is not here\");\n    }\n  });\n  navigator.mediaDevices.getUserMedia({\n    video: true,\n    audio: false\n  }).then(yourStream => {\n    peer.on(\"call\", call => {\n      call.answer(yourStream);\n      const video2 = document.createElement(\"video\");\n      call.on(\"stream\", anotherStream => {\n        addVideoStream(video2, anotherStream);\n      });\n    });\n    const video = document.createElement(\"video\");\n    addVideoStream(video, yourStream);\n    socket.on(\"user-joined\", userID => {\n      connectToNewUser(userID, yourStream, peer);\n    });\n  });\n  socket.on(\"play-video\", vID => {\n    setClientUrl(`https://www.youtube.com/watch?v=${vID}`);\n  });\n  socket.on(\"state-changed\", (state, seconds) => {\n    if (state) {\n      clientPlayerRef.current.seekTo(seconds, \"seconds\");\n    }\n\n    setClinetState(state);\n  });\n  socket.on(\"recieve-message\", msg => {\n    console.log(msg);\n    createMessage(msg);\n  });\n}\n\nfunction addVideoStream(video, stream) {\n  const container = document.getElementById(\"r-video-container\");\n  video.srcObject = stream;\n  video.addEventListener(\"loadedmetadata\", () => {\n    video.play();\n  });\n  container.appendChild(video);\n}\n\nfunction connectToNewUser(userID, yourStream, peer) {\n  const call = peer.call(userID, yourStream);\n  const video = document.createElement(\"video\");\n  call.on(\"stream\", anotherUserstream => {\n    addVideoStream(video, anotherUserstream);\n  });\n  call.on(\"close\", () => {\n    video.remove();\n  });\n  console.log(activePeers + \"peers\");\n}\n\nfunction playVideoToOthers(videoID) {\n  socket.emit(\"video-playing\", videoID);\n}\n\nfunction videoStateChanged(state, seconds) {\n  socket.emit(\"video-state\", state, seconds);\n}\n\nfunction sendMessageToOthers(msg) {\n  socket.emit(\"send-message\", msg);\n}\n\nexport { initSocketConnection, playVideoToOthers, videoStateChanged, sendMessageToOthers };","map":{"version":3,"sources":["C:/Users/sakth/Documents/Buzz.live/frontend/buzz.live/src/functions/roomConnection.js"],"names":["io","Peer","activePeers","socket","initSocketConnection","roomID","setClientUrl","setClinetState","clientPlayerRef","createMessage","peer","undefined","host","port","on","id","emit","userID","close","console","log","navigator","mediaDevices","getUserMedia","video","audio","then","yourStream","call","answer","video2","document","createElement","anotherStream","addVideoStream","connectToNewUser","vID","state","seconds","current","seekTo","msg","stream","container","getElementById","srcObject","addEventListener","play","appendChild","anotherUserstream","remove","playVideoToOthers","videoID","videoStateChanged","sendMessageToOthers"],"mappings":"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","sourcesContent":["import {io} from \"socket.io-client\";\r\nimport Peer from \"peerjs\";\r\n\r\nconst activePeers = {};\r\nvar socket\r\nfunction initSocketConnection(roomID,setClientUrl,setClinetState,clientPlayerRef,createMessage){\r\n    const peer = new Peer(undefined, {\r\n        host: '/',\r\n        port: '3001'\r\n      })\r\n    socket = io(\"http://localhost:5000\")\r\n\r\n    peer.on(\"open\",(id)=>{\r\n        socket.emit(\"join-room\",roomID,id)\r\n    })\r\n\r\n    socket.on(\"user-leaved\",userID=>{\r\n        if(activePeers[userID]){\r\n            activePeers[userID].close();\r\n            console.log(\"user removed\");\r\n        }else{\r\n            console.log(\"user is not here\");\r\n        }\r\n    })\r\n\r\n    navigator.mediaDevices.getUserMedia({\r\n        video:true,\r\n        audio:false,\r\n    }).then((yourStream)=>{\r\n\r\n        peer.on(\"call\",(call)=>{\r\n            call.answer(yourStream);\r\n            const video2 = document.createElement(\"video\")\r\n            call.on(\"stream\",(anotherStream)=>{\r\n                addVideoStream(video2,anotherStream);\r\n            })\r\n        })\r\n\r\n        const video = document.createElement(\"video\")\r\n        addVideoStream(video,yourStream);\r\n\r\n        socket.on(\"user-joined\",(userID)=>{\r\n            connectToNewUser(userID,yourStream,peer);\r\n        })\r\n    })\r\n\r\n    socket.on(\"play-video\",(vID)=>{\r\n        setClientUrl(`https://www.youtube.com/watch?v=${vID}`)\r\n    })\r\n\r\n    socket.on(\"state-changed\",(state,seconds)=>{\r\n        if(state){\r\n            clientPlayerRef.current.seekTo(seconds,\"seconds\");\r\n        }\r\n\r\n        setClinetState(state) \r\n    })\r\n\r\n    socket.on(\"recieve-message\",(msg)=>{\r\n        console.log(msg);\r\n        createMessage(msg);\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\nfunction addVideoStream(video,stream){\r\n    const container = document.getElementById(\"r-video-container\");\r\n    video.srcObject = stream;\r\n    video.addEventListener(\"loadedmetadata\",()=>{\r\n        video.play();\r\n    })\r\n    container.appendChild(video);\r\n}\r\n\r\nfunction connectToNewUser(userID,yourStream,peer){\r\n    const call = peer.call(userID,yourStream);\r\n    const video = document.createElement(\"video\");\r\n    call.on(\"stream\",(anotherUserstream)=>{\r\n        addVideoStream(video,anotherUserstream);\r\n    })\r\n\r\n    call.on(\"close\",()=>{\r\n        video.remove();\r\n    })\r\n    \r\n    console.log(activePeers+\"peers\");\r\n    \r\n}\r\n\r\nfunction playVideoToOthers(videoID){\r\n    socket.emit(\"video-playing\",videoID);\r\n}\r\n\r\nfunction videoStateChanged(state,seconds){\r\n    socket.emit(\"video-state\",state,seconds);\r\n}\r\n\r\nfunction sendMessageToOthers(msg){\r\n    socket.emit(\"send-message\",msg);\r\n}\r\n\r\nexport {initSocketConnection,playVideoToOthers,videoStateChanged,sendMessageToOthers};"]},"metadata":{},"sourceType":"module"}